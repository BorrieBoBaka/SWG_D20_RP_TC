/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.intangible;

import server.zone.objects.intangible.ControlDevice;
import server.zone.objects.creature.CreatureObject;
import server.zone.objects.tangible.TangibleObject;
import server.zone.packets.scene.AttributeListMessage;
include server.zone.managers.radial.RadialOptions;
import server.zone.packets.object.ObjectMenuResponse;

@json
class RpShipControlDevice extends ControlDevice {

    public RpShipControlDevice() {
		Logger.setLoggingName("RpShipControlDevice");
		Logger.setLogging(false);
		Logger.setGlobalLogging(true);
	}

    @preLocked
	@arg1preLocked
	public native void spawnCaller(CreatureObject player);

    @preLocked
	@arg1preLocked
	public native void landShip(CreatureObject player);

    //@local
	//@dirty
	//public native void fillObjectMenuResponse(ObjectMenuResponse menuResponse, CreatureObject player);

	
    /**
	 * Handles the radial selection sent by the client
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @returns 0 if successfull
	 */
	//@preLocked
	//@arg1preLocked
	//public native int handleObjectMenuSelect(CreatureObject player, byte selectedID);
	

    /**
	 * Destroys this object from database
	 * @pre { this is locked }
	 * @post { this is locked }
	 * @param destroyContainedObjects if true, will destroy from database all its contained objects
	 */
	@preLocked
	public native void destroyObjectFromDatabase(boolean destroyContainedObjects = false);

	/**
	 * Checks if the object can be destroyed
	 * @pre { this is locked }
	 * @post { this is locked }
	 * @returns 0 on succes, != 0 on error
	 */
	@dirty
	public native int canBeDestroyed(CreatureObject player);

	@dirty
	public native boolean canBeTradedTo(CreatureObject player, CreatureObject receiver, int numberInTrade);

	
	/**
	 * Fills the attribute list message options that are sent to player creature
	 * @pre { }
	 * @post { }
	 * @param msg attribute list message with the attributes
	 * @param object player creature to which the message is sent
	 */
	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);
	
	@dirty
	public boolean isRpShipControlDevice() {
		return true;
	}

}